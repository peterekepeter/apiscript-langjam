Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> empty
Rule 2     program -> endpoint_definition program
Rule 3     program -> table_definition program
Rule 4     table_definition -> TABLE NAME OPEN_BRACES table_columns CLOSE_BRACES
Rule 5     table_columns -> table_column table_columns_not_whitespace
Rule 6     table_columns -> empty
Rule 7     table_columns_not_whitespace -> table_column table_columns_not_whitespace
Rule 8     table_columns_not_whitespace -> empty
Rule 9     table_column -> NAME COLON table_column_type opt_table_column_types SEMICOLON
Rule 10    opt_table_column_types -> table_column_types
Rule 11    opt_table_column_types -> empty
Rule 12    table_column_types -> table_column_type table_column_types
Rule 13    table_column_types -> table_column_type
Rule 14    table_column_type -> NAME
Rule 15    table_column_type -> FK OPEN_PAREN NAME DOT NAME AS NAME CLOSE_PAREN
Rule 16    endpoint_definition -> METHOD endpoint LAMBDA statement SEMICOLON
Rule 17    endpoint -> DOT endpoint_not_start
Rule 18    endpoint -> UPDIR_SEGMENT endpoint_not_start
Rule 19    endpoint -> endpoint_not_start
Rule 20    endpoint_not_start -> PATH_SEGMENT opt_endpoint
Rule 21    endpoint_not_start -> CAPTURING_SEGMENT opt_endpoint
Rule 22    opt_endpoint -> endpoint
Rule 23    opt_endpoint -> empty
Rule 24    statement -> command commands
Rule 25    commands -> PIPE command commands
Rule 26    commands -> empty
Rule 27    command -> raw_value
Rule 28    command -> DOLLAR_SIGN NAME
Rule 29    command -> FORMAT NAME
Rule 30    command -> EXCLUDE compound_name_list
Rule 31    command -> JOIN db_query
Rule 32    command -> SELECT db_query
Rule 33    compound_name_list -> compound_name compound_name_list_not_start
Rule 34    compound_name_list -> empty
Rule 35    compound_name_list_not_start -> COMMA compound_name compound_name_list_not_start
Rule 36    compound_name_list_not_start -> empty
Rule 37    compound_name -> NAME DOT compound_name
Rule 38    compound_name -> NAME
Rule 39    db_query_list -> db_query_item COMMA db_query_list
Rule 40    db_query_list -> db_query_item
Rule 41    db_query_list -> empty
Rule 42    db_query_item -> db_query
Rule 43    db_query_item -> NAME
Rule 44    db_query -> compound_name OPEN_PAREN db_query_list CLOSE_PAREN
Rule 45    raw_value -> STRING
Rule 46    raw_value -> INTEGER
Rule 47    raw_value -> DOUBLE
Rule 48    raw_value -> BOOLEAN
Rule 49    raw_value -> NULL
Rule 50    raw_value -> list
Rule 51    raw_value -> object
Rule 52    list -> OPEN_BRACKET list_elements CLOSE_BRACKET
Rule 53    list_elements -> raw_value COMMA list_elements
Rule 54    list_elements -> empty
Rule 55    object -> OPEN_BRACES object_elements CLOSE_BRACES
Rule 56    object_elements -> STRING COLON raw_value COMMA object_elements
Rule 57    object_elements -> empty
Rule 58    empty -> <empty>

Terminals, with rules where they appear

AS                   : 15
BOOLEAN              : 48
CAPTURING_SEGMENT    : 21
CLOSE_BRACES         : 4 55
CLOSE_BRACKET        : 52
CLOSE_PAREN          : 15 44
COLON                : 9 56
COMMA                : 35 39 53 56
DOLLAR_SIGN          : 28
DOT                  : 15 17 37
DOUBLE               : 47
EXCLUDE              : 30
FK                   : 15
FORMAT               : 29
INTEGER              : 46
JOIN                 : 31
LAMBDA               : 16
METHOD               : 16
NAME                 : 4 9 14 15 15 15 28 29 37 38 43
NULL                 : 49
OPEN_BRACES          : 4 55
OPEN_BRACKET         : 52
OPEN_PAREN           : 15 44
PATH_SEGMENT         : 20
PIPE                 : 25
SELECT               : 32
SEMICOLON            : 9 16
STRING               : 45 56
TABLE                : 4
UPDIR_SEGMENT        : 18
error                : 

Nonterminals, with rules where they appear

command              : 24 25
commands             : 24 25
compound_name        : 33 35 37 44
compound_name_list   : 30
compound_name_list_not_start : 33 35
db_query             : 31 32 42
db_query_item        : 39 40
db_query_list        : 39 44
empty                : 1 6 8 11 23 26 34 36 41 54 57
endpoint             : 16 22
endpoint_definition  : 2
endpoint_not_start   : 17 18 19
list                 : 50
list_elements        : 52 53
object               : 51
object_elements      : 55 56
opt_endpoint         : 20 21
opt_table_column_types : 9
program              : 2 3 0
raw_value            : 27 53 56
statement            : 16
table_column         : 5 7
table_column_type    : 9 12 13
table_column_types   : 10 12
table_columns        : 4
table_columns_not_whitespace : 5 7
table_definition     : 3

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . empty
    (2) program -> . endpoint_definition program
    (3) program -> . table_definition program
    (58) empty -> .
    (16) endpoint_definition -> . METHOD endpoint LAMBDA statement SEMICOLON
    (4) table_definition -> . TABLE NAME OPEN_BRACES table_columns CLOSE_BRACES

    $end            reduce using rule 58 (empty -> .)
    METHOD          shift and go to state 5
    TABLE           shift and go to state 6

    program                        shift and go to state 1
    empty                          shift and go to state 2
    endpoint_definition            shift and go to state 3
    table_definition               shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (1) program -> empty .

    $end            reduce using rule 1 (program -> empty .)


state 3

    (2) program -> endpoint_definition . program
    (1) program -> . empty
    (2) program -> . endpoint_definition program
    (3) program -> . table_definition program
    (58) empty -> .
    (16) endpoint_definition -> . METHOD endpoint LAMBDA statement SEMICOLON
    (4) table_definition -> . TABLE NAME OPEN_BRACES table_columns CLOSE_BRACES

    $end            reduce using rule 58 (empty -> .)
    METHOD          shift and go to state 5
    TABLE           shift and go to state 6

    endpoint_definition            shift and go to state 3
    program                        shift and go to state 7
    empty                          shift and go to state 2
    table_definition               shift and go to state 4

state 4

    (3) program -> table_definition . program
    (1) program -> . empty
    (2) program -> . endpoint_definition program
    (3) program -> . table_definition program
    (58) empty -> .
    (16) endpoint_definition -> . METHOD endpoint LAMBDA statement SEMICOLON
    (4) table_definition -> . TABLE NAME OPEN_BRACES table_columns CLOSE_BRACES

    $end            reduce using rule 58 (empty -> .)
    METHOD          shift and go to state 5
    TABLE           shift and go to state 6

    table_definition               shift and go to state 4
    program                        shift and go to state 8
    empty                          shift and go to state 2
    endpoint_definition            shift and go to state 3

state 5

    (16) endpoint_definition -> METHOD . endpoint LAMBDA statement SEMICOLON
    (17) endpoint -> . DOT endpoint_not_start
    (18) endpoint -> . UPDIR_SEGMENT endpoint_not_start
    (19) endpoint -> . endpoint_not_start
    (20) endpoint_not_start -> . PATH_SEGMENT opt_endpoint
    (21) endpoint_not_start -> . CAPTURING_SEGMENT opt_endpoint

    DOT             shift and go to state 10
    UPDIR_SEGMENT   shift and go to state 12
    PATH_SEGMENT    shift and go to state 13
    CAPTURING_SEGMENT shift and go to state 14

    endpoint                       shift and go to state 9
    endpoint_not_start             shift and go to state 11

state 6

    (4) table_definition -> TABLE . NAME OPEN_BRACES table_columns CLOSE_BRACES

    NAME            shift and go to state 15


state 7

    (2) program -> endpoint_definition program .

    $end            reduce using rule 2 (program -> endpoint_definition program .)


state 8

    (3) program -> table_definition program .

    $end            reduce using rule 3 (program -> table_definition program .)


state 9

    (16) endpoint_definition -> METHOD endpoint . LAMBDA statement SEMICOLON

    LAMBDA          shift and go to state 16


state 10

    (17) endpoint -> DOT . endpoint_not_start
    (20) endpoint_not_start -> . PATH_SEGMENT opt_endpoint
    (21) endpoint_not_start -> . CAPTURING_SEGMENT opt_endpoint

    PATH_SEGMENT    shift and go to state 13
    CAPTURING_SEGMENT shift and go to state 14

    endpoint_not_start             shift and go to state 17

state 11

    (19) endpoint -> endpoint_not_start .

    LAMBDA          reduce using rule 19 (endpoint -> endpoint_not_start .)


state 12

    (18) endpoint -> UPDIR_SEGMENT . endpoint_not_start
    (20) endpoint_not_start -> . PATH_SEGMENT opt_endpoint
    (21) endpoint_not_start -> . CAPTURING_SEGMENT opt_endpoint

    PATH_SEGMENT    shift and go to state 13
    CAPTURING_SEGMENT shift and go to state 14

    endpoint_not_start             shift and go to state 18

state 13

    (20) endpoint_not_start -> PATH_SEGMENT . opt_endpoint
    (22) opt_endpoint -> . endpoint
    (23) opt_endpoint -> . empty
    (17) endpoint -> . DOT endpoint_not_start
    (18) endpoint -> . UPDIR_SEGMENT endpoint_not_start
    (19) endpoint -> . endpoint_not_start
    (58) empty -> .
    (20) endpoint_not_start -> . PATH_SEGMENT opt_endpoint
    (21) endpoint_not_start -> . CAPTURING_SEGMENT opt_endpoint

    DOT             shift and go to state 10
    UPDIR_SEGMENT   shift and go to state 12
    LAMBDA          reduce using rule 58 (empty -> .)
    PATH_SEGMENT    shift and go to state 13
    CAPTURING_SEGMENT shift and go to state 14

    opt_endpoint                   shift and go to state 19
    endpoint                       shift and go to state 20
    empty                          shift and go to state 21
    endpoint_not_start             shift and go to state 11

state 14

    (21) endpoint_not_start -> CAPTURING_SEGMENT . opt_endpoint
    (22) opt_endpoint -> . endpoint
    (23) opt_endpoint -> . empty
    (17) endpoint -> . DOT endpoint_not_start
    (18) endpoint -> . UPDIR_SEGMENT endpoint_not_start
    (19) endpoint -> . endpoint_not_start
    (58) empty -> .
    (20) endpoint_not_start -> . PATH_SEGMENT opt_endpoint
    (21) endpoint_not_start -> . CAPTURING_SEGMENT opt_endpoint

    DOT             shift and go to state 10
    UPDIR_SEGMENT   shift and go to state 12
    LAMBDA          reduce using rule 58 (empty -> .)
    PATH_SEGMENT    shift and go to state 13
    CAPTURING_SEGMENT shift and go to state 14

    opt_endpoint                   shift and go to state 22
    endpoint                       shift and go to state 20
    empty                          shift and go to state 21
    endpoint_not_start             shift and go to state 11

state 15

    (4) table_definition -> TABLE NAME . OPEN_BRACES table_columns CLOSE_BRACES

    OPEN_BRACES     shift and go to state 23


state 16

    (16) endpoint_definition -> METHOD endpoint LAMBDA . statement SEMICOLON
    (24) statement -> . command commands
    (27) command -> . raw_value
    (28) command -> . DOLLAR_SIGN NAME
    (29) command -> . FORMAT NAME
    (30) command -> . EXCLUDE compound_name_list
    (31) command -> . JOIN db_query
    (32) command -> . SELECT db_query
    (45) raw_value -> . STRING
    (46) raw_value -> . INTEGER
    (47) raw_value -> . DOUBLE
    (48) raw_value -> . BOOLEAN
    (49) raw_value -> . NULL
    (50) raw_value -> . list
    (51) raw_value -> . object
    (52) list -> . OPEN_BRACKET list_elements CLOSE_BRACKET
    (55) object -> . OPEN_BRACES object_elements CLOSE_BRACES

    DOLLAR_SIGN     shift and go to state 27
    FORMAT          shift and go to state 28
    EXCLUDE         shift and go to state 29
    JOIN            shift and go to state 30
    SELECT          shift and go to state 31
    STRING          shift and go to state 32
    INTEGER         shift and go to state 33
    DOUBLE          shift and go to state 34
    BOOLEAN         shift and go to state 35
    NULL            shift and go to state 36
    OPEN_BRACKET    shift and go to state 39
    OPEN_BRACES     shift and go to state 40

    statement                      shift and go to state 24
    command                        shift and go to state 25
    raw_value                      shift and go to state 26
    list                           shift and go to state 37
    object                         shift and go to state 38

state 17

    (17) endpoint -> DOT endpoint_not_start .

    LAMBDA          reduce using rule 17 (endpoint -> DOT endpoint_not_start .)


state 18

    (18) endpoint -> UPDIR_SEGMENT endpoint_not_start .

    LAMBDA          reduce using rule 18 (endpoint -> UPDIR_SEGMENT endpoint_not_start .)


state 19

    (20) endpoint_not_start -> PATH_SEGMENT opt_endpoint .

    LAMBDA          reduce using rule 20 (endpoint_not_start -> PATH_SEGMENT opt_endpoint .)


state 20

    (22) opt_endpoint -> endpoint .

    LAMBDA          reduce using rule 22 (opt_endpoint -> endpoint .)


state 21

    (23) opt_endpoint -> empty .

    LAMBDA          reduce using rule 23 (opt_endpoint -> empty .)


state 22

    (21) endpoint_not_start -> CAPTURING_SEGMENT opt_endpoint .

    LAMBDA          reduce using rule 21 (endpoint_not_start -> CAPTURING_SEGMENT opt_endpoint .)


state 23

    (4) table_definition -> TABLE NAME OPEN_BRACES . table_columns CLOSE_BRACES
    (5) table_columns -> . table_column table_columns_not_whitespace
    (6) table_columns -> . empty
    (9) table_column -> . NAME COLON table_column_type opt_table_column_types SEMICOLON
    (58) empty -> .

    NAME            shift and go to state 41
    CLOSE_BRACES    reduce using rule 58 (empty -> .)

    table_columns                  shift and go to state 42
    table_column                   shift and go to state 43
    empty                          shift and go to state 44

state 24

    (16) endpoint_definition -> METHOD endpoint LAMBDA statement . SEMICOLON

    SEMICOLON       shift and go to state 45


state 25

    (24) statement -> command . commands
    (25) commands -> . PIPE command commands
    (26) commands -> . empty
    (58) empty -> .

    PIPE            shift and go to state 47
    SEMICOLON       reduce using rule 58 (empty -> .)

    commands                       shift and go to state 46
    empty                          shift and go to state 48

state 26

    (27) command -> raw_value .

    PIPE            reduce using rule 27 (command -> raw_value .)
    SEMICOLON       reduce using rule 27 (command -> raw_value .)


state 27

    (28) command -> DOLLAR_SIGN . NAME

    NAME            shift and go to state 49


state 28

    (29) command -> FORMAT . NAME

    NAME            shift and go to state 50


state 29

    (30) command -> EXCLUDE . compound_name_list
    (33) compound_name_list -> . compound_name compound_name_list_not_start
    (34) compound_name_list -> . empty
    (37) compound_name -> . NAME DOT compound_name
    (38) compound_name -> . NAME
    (58) empty -> .

    NAME            shift and go to state 54
    PIPE            reduce using rule 58 (empty -> .)
    SEMICOLON       reduce using rule 58 (empty -> .)

    compound_name_list             shift and go to state 51
    compound_name                  shift and go to state 52
    empty                          shift and go to state 53

state 30

    (31) command -> JOIN . db_query
    (44) db_query -> . compound_name OPEN_PAREN db_query_list CLOSE_PAREN
    (37) compound_name -> . NAME DOT compound_name
    (38) compound_name -> . NAME

    NAME            shift and go to state 54

    db_query                       shift and go to state 55
    compound_name                  shift and go to state 56

state 31

    (32) command -> SELECT . db_query
    (44) db_query -> . compound_name OPEN_PAREN db_query_list CLOSE_PAREN
    (37) compound_name -> . NAME DOT compound_name
    (38) compound_name -> . NAME

    NAME            shift and go to state 54

    db_query                       shift and go to state 57
    compound_name                  shift and go to state 56

state 32

    (45) raw_value -> STRING .

    PIPE            reduce using rule 45 (raw_value -> STRING .)
    SEMICOLON       reduce using rule 45 (raw_value -> STRING .)
    COMMA           reduce using rule 45 (raw_value -> STRING .)


state 33

    (46) raw_value -> INTEGER .

    PIPE            reduce using rule 46 (raw_value -> INTEGER .)
    SEMICOLON       reduce using rule 46 (raw_value -> INTEGER .)
    COMMA           reduce using rule 46 (raw_value -> INTEGER .)


state 34

    (47) raw_value -> DOUBLE .

    PIPE            reduce using rule 47 (raw_value -> DOUBLE .)
    SEMICOLON       reduce using rule 47 (raw_value -> DOUBLE .)
    COMMA           reduce using rule 47 (raw_value -> DOUBLE .)


state 35

    (48) raw_value -> BOOLEAN .

    PIPE            reduce using rule 48 (raw_value -> BOOLEAN .)
    SEMICOLON       reduce using rule 48 (raw_value -> BOOLEAN .)
    COMMA           reduce using rule 48 (raw_value -> BOOLEAN .)


state 36

    (49) raw_value -> NULL .

    PIPE            reduce using rule 49 (raw_value -> NULL .)
    SEMICOLON       reduce using rule 49 (raw_value -> NULL .)
    COMMA           reduce using rule 49 (raw_value -> NULL .)


state 37

    (50) raw_value -> list .

    PIPE            reduce using rule 50 (raw_value -> list .)
    SEMICOLON       reduce using rule 50 (raw_value -> list .)
    COMMA           reduce using rule 50 (raw_value -> list .)


state 38

    (51) raw_value -> object .

    PIPE            reduce using rule 51 (raw_value -> object .)
    SEMICOLON       reduce using rule 51 (raw_value -> object .)
    COMMA           reduce using rule 51 (raw_value -> object .)


state 39

    (52) list -> OPEN_BRACKET . list_elements CLOSE_BRACKET
    (53) list_elements -> . raw_value COMMA list_elements
    (54) list_elements -> . empty
    (45) raw_value -> . STRING
    (46) raw_value -> . INTEGER
    (47) raw_value -> . DOUBLE
    (48) raw_value -> . BOOLEAN
    (49) raw_value -> . NULL
    (50) raw_value -> . list
    (51) raw_value -> . object
    (58) empty -> .
    (52) list -> . OPEN_BRACKET list_elements CLOSE_BRACKET
    (55) object -> . OPEN_BRACES object_elements CLOSE_BRACES

    STRING          shift and go to state 32
    INTEGER         shift and go to state 33
    DOUBLE          shift and go to state 34
    BOOLEAN         shift and go to state 35
    NULL            shift and go to state 36
    CLOSE_BRACKET   reduce using rule 58 (empty -> .)
    OPEN_BRACKET    shift and go to state 39
    OPEN_BRACES     shift and go to state 40

    list_elements                  shift and go to state 58
    raw_value                      shift and go to state 59
    empty                          shift and go to state 60
    list                           shift and go to state 37
    object                         shift and go to state 38

state 40

    (55) object -> OPEN_BRACES . object_elements CLOSE_BRACES
    (56) object_elements -> . STRING COLON raw_value COMMA object_elements
    (57) object_elements -> . empty
    (58) empty -> .

    STRING          shift and go to state 62
    CLOSE_BRACES    reduce using rule 58 (empty -> .)

    object_elements                shift and go to state 61
    empty                          shift and go to state 63

state 41

    (9) table_column -> NAME . COLON table_column_type opt_table_column_types SEMICOLON

    COLON           shift and go to state 64


state 42

    (4) table_definition -> TABLE NAME OPEN_BRACES table_columns . CLOSE_BRACES

    CLOSE_BRACES    shift and go to state 65


state 43

    (5) table_columns -> table_column . table_columns_not_whitespace
    (7) table_columns_not_whitespace -> . table_column table_columns_not_whitespace
    (8) table_columns_not_whitespace -> . empty
    (9) table_column -> . NAME COLON table_column_type opt_table_column_types SEMICOLON
    (58) empty -> .

    NAME            shift and go to state 41
    CLOSE_BRACES    reduce using rule 58 (empty -> .)

    table_column                   shift and go to state 66
    table_columns_not_whitespace   shift and go to state 67
    empty                          shift and go to state 68

state 44

    (6) table_columns -> empty .

    CLOSE_BRACES    reduce using rule 6 (table_columns -> empty .)


state 45

    (16) endpoint_definition -> METHOD endpoint LAMBDA statement SEMICOLON .

    METHOD          reduce using rule 16 (endpoint_definition -> METHOD endpoint LAMBDA statement SEMICOLON .)
    TABLE           reduce using rule 16 (endpoint_definition -> METHOD endpoint LAMBDA statement SEMICOLON .)
    $end            reduce using rule 16 (endpoint_definition -> METHOD endpoint LAMBDA statement SEMICOLON .)


state 46

    (24) statement -> command commands .

    SEMICOLON       reduce using rule 24 (statement -> command commands .)


state 47

    (25) commands -> PIPE . command commands
    (27) command -> . raw_value
    (28) command -> . DOLLAR_SIGN NAME
    (29) command -> . FORMAT NAME
    (30) command -> . EXCLUDE compound_name_list
    (31) command -> . JOIN db_query
    (32) command -> . SELECT db_query
    (45) raw_value -> . STRING
    (46) raw_value -> . INTEGER
    (47) raw_value -> . DOUBLE
    (48) raw_value -> . BOOLEAN
    (49) raw_value -> . NULL
    (50) raw_value -> . list
    (51) raw_value -> . object
    (52) list -> . OPEN_BRACKET list_elements CLOSE_BRACKET
    (55) object -> . OPEN_BRACES object_elements CLOSE_BRACES

    DOLLAR_SIGN     shift and go to state 27
    FORMAT          shift and go to state 28
    EXCLUDE         shift and go to state 29
    JOIN            shift and go to state 30
    SELECT          shift and go to state 31
    STRING          shift and go to state 32
    INTEGER         shift and go to state 33
    DOUBLE          shift and go to state 34
    BOOLEAN         shift and go to state 35
    NULL            shift and go to state 36
    OPEN_BRACKET    shift and go to state 39
    OPEN_BRACES     shift and go to state 40

    command                        shift and go to state 69
    raw_value                      shift and go to state 26
    list                           shift and go to state 37
    object                         shift and go to state 38

state 48

    (26) commands -> empty .

    SEMICOLON       reduce using rule 26 (commands -> empty .)


state 49

    (28) command -> DOLLAR_SIGN NAME .

    PIPE            reduce using rule 28 (command -> DOLLAR_SIGN NAME .)
    SEMICOLON       reduce using rule 28 (command -> DOLLAR_SIGN NAME .)


state 50

    (29) command -> FORMAT NAME .

    PIPE            reduce using rule 29 (command -> FORMAT NAME .)
    SEMICOLON       reduce using rule 29 (command -> FORMAT NAME .)


state 51

    (30) command -> EXCLUDE compound_name_list .

    PIPE            reduce using rule 30 (command -> EXCLUDE compound_name_list .)
    SEMICOLON       reduce using rule 30 (command -> EXCLUDE compound_name_list .)


state 52

    (33) compound_name_list -> compound_name . compound_name_list_not_start
    (35) compound_name_list_not_start -> . COMMA compound_name compound_name_list_not_start
    (36) compound_name_list_not_start -> . empty
    (58) empty -> .

    COMMA           shift and go to state 71
    PIPE            reduce using rule 58 (empty -> .)
    SEMICOLON       reduce using rule 58 (empty -> .)

    compound_name_list_not_start   shift and go to state 70
    empty                          shift and go to state 72

state 53

    (34) compound_name_list -> empty .

    PIPE            reduce using rule 34 (compound_name_list -> empty .)
    SEMICOLON       reduce using rule 34 (compound_name_list -> empty .)


state 54

    (37) compound_name -> NAME . DOT compound_name
    (38) compound_name -> NAME .

    DOT             shift and go to state 73
    COMMA           reduce using rule 38 (compound_name -> NAME .)
    PIPE            reduce using rule 38 (compound_name -> NAME .)
    SEMICOLON       reduce using rule 38 (compound_name -> NAME .)
    OPEN_PAREN      reduce using rule 38 (compound_name -> NAME .)


state 55

    (31) command -> JOIN db_query .

    PIPE            reduce using rule 31 (command -> JOIN db_query .)
    SEMICOLON       reduce using rule 31 (command -> JOIN db_query .)


state 56

    (44) db_query -> compound_name . OPEN_PAREN db_query_list CLOSE_PAREN

    OPEN_PAREN      shift and go to state 74


state 57

    (32) command -> SELECT db_query .

    PIPE            reduce using rule 32 (command -> SELECT db_query .)
    SEMICOLON       reduce using rule 32 (command -> SELECT db_query .)


state 58

    (52) list -> OPEN_BRACKET list_elements . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 75


state 59

    (53) list_elements -> raw_value . COMMA list_elements

    COMMA           shift and go to state 76


state 60

    (54) list_elements -> empty .

    CLOSE_BRACKET   reduce using rule 54 (list_elements -> empty .)


state 61

    (55) object -> OPEN_BRACES object_elements . CLOSE_BRACES

    CLOSE_BRACES    shift and go to state 77


state 62

    (56) object_elements -> STRING . COLON raw_value COMMA object_elements

    COLON           shift and go to state 78


state 63

    (57) object_elements -> empty .

    CLOSE_BRACES    reduce using rule 57 (object_elements -> empty .)


state 64

    (9) table_column -> NAME COLON . table_column_type opt_table_column_types SEMICOLON
    (14) table_column_type -> . NAME
    (15) table_column_type -> . FK OPEN_PAREN NAME DOT NAME AS NAME CLOSE_PAREN

    NAME            shift and go to state 79
    FK              shift and go to state 81

    table_column_type              shift and go to state 80

state 65

    (4) table_definition -> TABLE NAME OPEN_BRACES table_columns CLOSE_BRACES .

    METHOD          reduce using rule 4 (table_definition -> TABLE NAME OPEN_BRACES table_columns CLOSE_BRACES .)
    TABLE           reduce using rule 4 (table_definition -> TABLE NAME OPEN_BRACES table_columns CLOSE_BRACES .)
    $end            reduce using rule 4 (table_definition -> TABLE NAME OPEN_BRACES table_columns CLOSE_BRACES .)


state 66

    (7) table_columns_not_whitespace -> table_column . table_columns_not_whitespace
    (7) table_columns_not_whitespace -> . table_column table_columns_not_whitespace
    (8) table_columns_not_whitespace -> . empty
    (9) table_column -> . NAME COLON table_column_type opt_table_column_types SEMICOLON
    (58) empty -> .

    NAME            shift and go to state 41
    CLOSE_BRACES    reduce using rule 58 (empty -> .)

    table_column                   shift and go to state 66
    table_columns_not_whitespace   shift and go to state 82
    empty                          shift and go to state 68

state 67

    (5) table_columns -> table_column table_columns_not_whitespace .

    CLOSE_BRACES    reduce using rule 5 (table_columns -> table_column table_columns_not_whitespace .)


state 68

    (8) table_columns_not_whitespace -> empty .

    CLOSE_BRACES    reduce using rule 8 (table_columns_not_whitespace -> empty .)


state 69

    (25) commands -> PIPE command . commands
    (25) commands -> . PIPE command commands
    (26) commands -> . empty
    (58) empty -> .

    PIPE            shift and go to state 47
    SEMICOLON       reduce using rule 58 (empty -> .)

    commands                       shift and go to state 83
    empty                          shift and go to state 48

state 70

    (33) compound_name_list -> compound_name compound_name_list_not_start .

    PIPE            reduce using rule 33 (compound_name_list -> compound_name compound_name_list_not_start .)
    SEMICOLON       reduce using rule 33 (compound_name_list -> compound_name compound_name_list_not_start .)


state 71

    (35) compound_name_list_not_start -> COMMA . compound_name compound_name_list_not_start
    (37) compound_name -> . NAME DOT compound_name
    (38) compound_name -> . NAME

    NAME            shift and go to state 54

    compound_name                  shift and go to state 84

state 72

    (36) compound_name_list_not_start -> empty .

    PIPE            reduce using rule 36 (compound_name_list_not_start -> empty .)
    SEMICOLON       reduce using rule 36 (compound_name_list_not_start -> empty .)


state 73

    (37) compound_name -> NAME DOT . compound_name
    (37) compound_name -> . NAME DOT compound_name
    (38) compound_name -> . NAME

    NAME            shift and go to state 54

    compound_name                  shift and go to state 85

state 74

    (44) db_query -> compound_name OPEN_PAREN . db_query_list CLOSE_PAREN
    (39) db_query_list -> . db_query_item COMMA db_query_list
    (40) db_query_list -> . db_query_item
    (41) db_query_list -> . empty
    (42) db_query_item -> . db_query
    (43) db_query_item -> . NAME
    (58) empty -> .
    (44) db_query -> . compound_name OPEN_PAREN db_query_list CLOSE_PAREN
    (37) compound_name -> . NAME DOT compound_name
    (38) compound_name -> . NAME

    NAME            shift and go to state 90
    CLOSE_PAREN     reduce using rule 58 (empty -> .)

    compound_name                  shift and go to state 56
    db_query_list                  shift and go to state 86
    db_query_item                  shift and go to state 87
    empty                          shift and go to state 88
    db_query                       shift and go to state 89

state 75

    (52) list -> OPEN_BRACKET list_elements CLOSE_BRACKET .

    PIPE            reduce using rule 52 (list -> OPEN_BRACKET list_elements CLOSE_BRACKET .)
    SEMICOLON       reduce using rule 52 (list -> OPEN_BRACKET list_elements CLOSE_BRACKET .)
    COMMA           reduce using rule 52 (list -> OPEN_BRACKET list_elements CLOSE_BRACKET .)


state 76

    (53) list_elements -> raw_value COMMA . list_elements
    (53) list_elements -> . raw_value COMMA list_elements
    (54) list_elements -> . empty
    (45) raw_value -> . STRING
    (46) raw_value -> . INTEGER
    (47) raw_value -> . DOUBLE
    (48) raw_value -> . BOOLEAN
    (49) raw_value -> . NULL
    (50) raw_value -> . list
    (51) raw_value -> . object
    (58) empty -> .
    (52) list -> . OPEN_BRACKET list_elements CLOSE_BRACKET
    (55) object -> . OPEN_BRACES object_elements CLOSE_BRACES

    STRING          shift and go to state 32
    INTEGER         shift and go to state 33
    DOUBLE          shift and go to state 34
    BOOLEAN         shift and go to state 35
    NULL            shift and go to state 36
    CLOSE_BRACKET   reduce using rule 58 (empty -> .)
    OPEN_BRACKET    shift and go to state 39
    OPEN_BRACES     shift and go to state 40

    raw_value                      shift and go to state 59
    list_elements                  shift and go to state 91
    empty                          shift and go to state 60
    list                           shift and go to state 37
    object                         shift and go to state 38

state 77

    (55) object -> OPEN_BRACES object_elements CLOSE_BRACES .

    PIPE            reduce using rule 55 (object -> OPEN_BRACES object_elements CLOSE_BRACES .)
    SEMICOLON       reduce using rule 55 (object -> OPEN_BRACES object_elements CLOSE_BRACES .)
    COMMA           reduce using rule 55 (object -> OPEN_BRACES object_elements CLOSE_BRACES .)


state 78

    (56) object_elements -> STRING COLON . raw_value COMMA object_elements
    (45) raw_value -> . STRING
    (46) raw_value -> . INTEGER
    (47) raw_value -> . DOUBLE
    (48) raw_value -> . BOOLEAN
    (49) raw_value -> . NULL
    (50) raw_value -> . list
    (51) raw_value -> . object
    (52) list -> . OPEN_BRACKET list_elements CLOSE_BRACKET
    (55) object -> . OPEN_BRACES object_elements CLOSE_BRACES

    STRING          shift and go to state 32
    INTEGER         shift and go to state 33
    DOUBLE          shift and go to state 34
    BOOLEAN         shift and go to state 35
    NULL            shift and go to state 36
    OPEN_BRACKET    shift and go to state 39
    OPEN_BRACES     shift and go to state 40

    raw_value                      shift and go to state 92
    list                           shift and go to state 37
    object                         shift and go to state 38

state 79

    (14) table_column_type -> NAME .

    NAME            reduce using rule 14 (table_column_type -> NAME .)
    FK              reduce using rule 14 (table_column_type -> NAME .)
    SEMICOLON       reduce using rule 14 (table_column_type -> NAME .)


state 80

    (9) table_column -> NAME COLON table_column_type . opt_table_column_types SEMICOLON
    (10) opt_table_column_types -> . table_column_types
    (11) opt_table_column_types -> . empty
    (12) table_column_types -> . table_column_type table_column_types
    (13) table_column_types -> . table_column_type
    (58) empty -> .
    (14) table_column_type -> . NAME
    (15) table_column_type -> . FK OPEN_PAREN NAME DOT NAME AS NAME CLOSE_PAREN

    SEMICOLON       reduce using rule 58 (empty -> .)
    NAME            shift and go to state 79
    FK              shift and go to state 81

    table_column_type              shift and go to state 93
    opt_table_column_types         shift and go to state 94
    table_column_types             shift and go to state 95
    empty                          shift and go to state 96

state 81

    (15) table_column_type -> FK . OPEN_PAREN NAME DOT NAME AS NAME CLOSE_PAREN

    OPEN_PAREN      shift and go to state 97


state 82

    (7) table_columns_not_whitespace -> table_column table_columns_not_whitespace .

    CLOSE_BRACES    reduce using rule 7 (table_columns_not_whitespace -> table_column table_columns_not_whitespace .)


state 83

    (25) commands -> PIPE command commands .

    SEMICOLON       reduce using rule 25 (commands -> PIPE command commands .)


state 84

    (35) compound_name_list_not_start -> COMMA compound_name . compound_name_list_not_start
    (35) compound_name_list_not_start -> . COMMA compound_name compound_name_list_not_start
    (36) compound_name_list_not_start -> . empty
    (58) empty -> .

    COMMA           shift and go to state 71
    PIPE            reduce using rule 58 (empty -> .)
    SEMICOLON       reduce using rule 58 (empty -> .)

    compound_name_list_not_start   shift and go to state 98
    empty                          shift and go to state 72

state 85

    (37) compound_name -> NAME DOT compound_name .

    COMMA           reduce using rule 37 (compound_name -> NAME DOT compound_name .)
    PIPE            reduce using rule 37 (compound_name -> NAME DOT compound_name .)
    SEMICOLON       reduce using rule 37 (compound_name -> NAME DOT compound_name .)
    OPEN_PAREN      reduce using rule 37 (compound_name -> NAME DOT compound_name .)


state 86

    (44) db_query -> compound_name OPEN_PAREN db_query_list . CLOSE_PAREN

    CLOSE_PAREN     shift and go to state 99


state 87

    (39) db_query_list -> db_query_item . COMMA db_query_list
    (40) db_query_list -> db_query_item .

    COMMA           shift and go to state 100
    CLOSE_PAREN     reduce using rule 40 (db_query_list -> db_query_item .)


state 88

    (41) db_query_list -> empty .

    CLOSE_PAREN     reduce using rule 41 (db_query_list -> empty .)


state 89

    (42) db_query_item -> db_query .

    COMMA           reduce using rule 42 (db_query_item -> db_query .)
    CLOSE_PAREN     reduce using rule 42 (db_query_item -> db_query .)


state 90

    (43) db_query_item -> NAME .
    (37) compound_name -> NAME . DOT compound_name
    (38) compound_name -> NAME .

    COMMA           reduce using rule 43 (db_query_item -> NAME .)
    CLOSE_PAREN     reduce using rule 43 (db_query_item -> NAME .)
    DOT             shift and go to state 73
    OPEN_PAREN      reduce using rule 38 (compound_name -> NAME .)


state 91

    (53) list_elements -> raw_value COMMA list_elements .

    CLOSE_BRACKET   reduce using rule 53 (list_elements -> raw_value COMMA list_elements .)


state 92

    (56) object_elements -> STRING COLON raw_value . COMMA object_elements

    COMMA           shift and go to state 101


state 93

    (12) table_column_types -> table_column_type . table_column_types
    (13) table_column_types -> table_column_type .
    (12) table_column_types -> . table_column_type table_column_types
    (13) table_column_types -> . table_column_type
    (14) table_column_type -> . NAME
    (15) table_column_type -> . FK OPEN_PAREN NAME DOT NAME AS NAME CLOSE_PAREN

    SEMICOLON       reduce using rule 13 (table_column_types -> table_column_type .)
    NAME            shift and go to state 79
    FK              shift and go to state 81

    table_column_type              shift and go to state 93
    table_column_types             shift and go to state 102

state 94

    (9) table_column -> NAME COLON table_column_type opt_table_column_types . SEMICOLON

    SEMICOLON       shift and go to state 103


state 95

    (10) opt_table_column_types -> table_column_types .

    SEMICOLON       reduce using rule 10 (opt_table_column_types -> table_column_types .)


state 96

    (11) opt_table_column_types -> empty .

    SEMICOLON       reduce using rule 11 (opt_table_column_types -> empty .)


state 97

    (15) table_column_type -> FK OPEN_PAREN . NAME DOT NAME AS NAME CLOSE_PAREN

    NAME            shift and go to state 104


state 98

    (35) compound_name_list_not_start -> COMMA compound_name compound_name_list_not_start .

    PIPE            reduce using rule 35 (compound_name_list_not_start -> COMMA compound_name compound_name_list_not_start .)
    SEMICOLON       reduce using rule 35 (compound_name_list_not_start -> COMMA compound_name compound_name_list_not_start .)


state 99

    (44) db_query -> compound_name OPEN_PAREN db_query_list CLOSE_PAREN .

    PIPE            reduce using rule 44 (db_query -> compound_name OPEN_PAREN db_query_list CLOSE_PAREN .)
    SEMICOLON       reduce using rule 44 (db_query -> compound_name OPEN_PAREN db_query_list CLOSE_PAREN .)
    COMMA           reduce using rule 44 (db_query -> compound_name OPEN_PAREN db_query_list CLOSE_PAREN .)
    CLOSE_PAREN     reduce using rule 44 (db_query -> compound_name OPEN_PAREN db_query_list CLOSE_PAREN .)


state 100

    (39) db_query_list -> db_query_item COMMA . db_query_list
    (39) db_query_list -> . db_query_item COMMA db_query_list
    (40) db_query_list -> . db_query_item
    (41) db_query_list -> . empty
    (42) db_query_item -> . db_query
    (43) db_query_item -> . NAME
    (58) empty -> .
    (44) db_query -> . compound_name OPEN_PAREN db_query_list CLOSE_PAREN
    (37) compound_name -> . NAME DOT compound_name
    (38) compound_name -> . NAME

    NAME            shift and go to state 90
    CLOSE_PAREN     reduce using rule 58 (empty -> .)

    db_query_item                  shift and go to state 87
    db_query_list                  shift and go to state 105
    empty                          shift and go to state 88
    db_query                       shift and go to state 89
    compound_name                  shift and go to state 56

state 101

    (56) object_elements -> STRING COLON raw_value COMMA . object_elements
    (56) object_elements -> . STRING COLON raw_value COMMA object_elements
    (57) object_elements -> . empty
    (58) empty -> .

    STRING          shift and go to state 62
    CLOSE_BRACES    reduce using rule 58 (empty -> .)

    object_elements                shift and go to state 106
    empty                          shift and go to state 63

state 102

    (12) table_column_types -> table_column_type table_column_types .

    SEMICOLON       reduce using rule 12 (table_column_types -> table_column_type table_column_types .)


state 103

    (9) table_column -> NAME COLON table_column_type opt_table_column_types SEMICOLON .

    NAME            reduce using rule 9 (table_column -> NAME COLON table_column_type opt_table_column_types SEMICOLON .)
    CLOSE_BRACES    reduce using rule 9 (table_column -> NAME COLON table_column_type opt_table_column_types SEMICOLON .)


state 104

    (15) table_column_type -> FK OPEN_PAREN NAME . DOT NAME AS NAME CLOSE_PAREN

    DOT             shift and go to state 107


state 105

    (39) db_query_list -> db_query_item COMMA db_query_list .

    CLOSE_PAREN     reduce using rule 39 (db_query_list -> db_query_item COMMA db_query_list .)


state 106

    (56) object_elements -> STRING COLON raw_value COMMA object_elements .

    CLOSE_BRACES    reduce using rule 56 (object_elements -> STRING COLON raw_value COMMA object_elements .)


state 107

    (15) table_column_type -> FK OPEN_PAREN NAME DOT . NAME AS NAME CLOSE_PAREN

    NAME            shift and go to state 108


state 108

    (15) table_column_type -> FK OPEN_PAREN NAME DOT NAME . AS NAME CLOSE_PAREN

    AS              shift and go to state 109


state 109

    (15) table_column_type -> FK OPEN_PAREN NAME DOT NAME AS . NAME CLOSE_PAREN

    NAME            shift and go to state 110


state 110

    (15) table_column_type -> FK OPEN_PAREN NAME DOT NAME AS NAME . CLOSE_PAREN

    CLOSE_PAREN     shift and go to state 111


state 111

    (15) table_column_type -> FK OPEN_PAREN NAME DOT NAME AS NAME CLOSE_PAREN .

    NAME            reduce using rule 15 (table_column_type -> FK OPEN_PAREN NAME DOT NAME AS NAME CLOSE_PAREN .)
    FK              reduce using rule 15 (table_column_type -> FK OPEN_PAREN NAME DOT NAME AS NAME CLOSE_PAREN .)
    SEMICOLON       reduce using rule 15 (table_column_type -> FK OPEN_PAREN NAME DOT NAME AS NAME CLOSE_PAREN .)

